Асинхронні задачі та робота з мережею
1) Реалізувати можливість зміни теми (темна/світла) за допомогою Shared Preferences - main_model.dart:48
2) Продемонструвати використання асинхронних функцій
   2.1) Обробка Future результату за допомогою .then() - main.dart:49
   2.2) Обробка Future результату за допомогою ключового слова await - main.dart:60
3) Виконання http запитів на віддалений ресурс 
   3.1) Написати функцію parseJson() для обробки отриманого JSON - main_model.dart:14

Роутинг. Керування переходами
4) Перехід на віджет по імені класу - main.dart:965
5) Перехід на віджет по "іменованій навігації" - main.dart:193
6) Передача параметрів у віджет, який буде відкрито (через конструктор) - main.dart:1102
7) Повернення параметрів назад при виході з віджета - main.dart:965
8) Nested-навігація. Можливий варіант - за допомогою BottomNavigationBar - main.dart:212

Анімації
9) Реалізувати анімацію
   9.1) Приклад: рухлива стовпчата діаграма - main.dart:610
10) Продемонструвати використання Animation, AnimationController, Tween - main.dart:641
11) У створеній анімації реалізувати зміну кольору або іншу трансформацію певного параметра. - main.dart:653
12) Анімація повинна реалізовувати певний рух, зміну положення. Цей рух можна зациклити - main.dart:765